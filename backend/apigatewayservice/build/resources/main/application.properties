# server port
server.port=8000

spring.application.name=apigateway-service
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://127.0.0.1:8761/eureka

#spring.cloud.gateway.routes[0]={id=first-service, uri=http://localhost:8081/, predicates=[Path=/first-service/**]}\
#  {id=second-service, uri=http://localhost:8082/, predicates=[Path=/first-service/**]}

spring.cloud.gateway.default-filters[0].name=GlobalFilter
spring.cloud.gateway.default-filters[0].args.baseMessage=Spring Cloud Gateway Global Filter
spring.cloud.gateway.default-filters[0].args.preLogger=true
spring.cloud.gateway.default-filters[0].args.postLogger=true

#spring.cloud.gateway.routes[0].id=user-service
#spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
#spring.cloud.gateway.routes[0].predicates[0]=Path=/user-service/**


spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE  
spring.cloud.gateway.routes[0].predicates[0]=Path=/user-service/login
spring.cloud.gateway.routes[0].predicates[1]=Method=POST
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/user-service/(?<segment>.*), /$\{segment}
# ? ????? api ??? ? 127.0.0.1:2345/user-service/health_check ?? ??? user-service???? ?? ?????? ?

spring.cloud.gateway.routes[1].id=user-service
spring.cloud.gateway.routes[1].uri=lb://USER-SERVICE  
spring.cloud.gateway.routes[1].predicates[0]=Path=/user-service/join
spring.cloud.gateway.routes[1].predicates[1]=Method=POST
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/user-service/(?<segment>.*), /$\{segment}


spring.cloud.gateway.routes[2].id=user-service
spring.cloud.gateway.routes[2].uri=lb://USER-SERVICE  
spring.cloud.gateway.routes[2].predicates[0]=Path=/user-service/**
spring.cloud.gateway.routes[2].predicates[1]=Method=GET
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/user-service/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[2].filters[2]=AuthorizationHeaderFilter

#spring.cloud.gateway.routes[0].id=first-service
##spring.cloud.gateway.routes[0].uri=http://localhost:8081/
#spring.cloud.gateway.routes[0].uri=lb://MY-FIRST-SERVICE
#spring.cloud.gateway.routes[0].predicates[0]=Path=/first-service/**
##spring.cloud.gateway.routes[0].filters[0]=AddRequestHeader=first-request, first-request-header2
##spring.cloud.gateway.routes[0].filters[1]=AddResponseHeader=first-response, first-response-header2
#spring.cloud.gateway.routes[0].filters[0]=CustomFilter
#
#spring.cloud.gateway.routes[1].id=second-service
##spring.cloud.gateway.routes[1].uri=http://localhost:8082/
#spring.cloud.gateway.routes[1].uri=lb://MY-SECOND-SERVICE
#spring.cloud.gateway.routes[1].predicates[0]=Path=/second-service/**
##spring.cloud.gateway.routes[1].filters[0]=AddRequestHeader=second-request, second-request-header2
##spring.cloud.gateway.routes[1].filters[1]=AddResponseHeader=second-response, second-response-header2
#spring.cloud.gateway.routes[1].filters[0].name=CustomFilter
#spring.cloud.gateway.routes[1].filters[1].name=LoggingFilter
#spring.cloud.gateway.routes[1].filters[1].args.baseMessage=Hi,there.
#spring.cloud.gateway.routes[1].filters[1].args.preLogger=true
#spring.cloud.gateway.routes[1].filters[1].args.postLogger=true



token.secret=user_token


